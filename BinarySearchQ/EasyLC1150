/**

Use Binary search to find the element in array which is equal to the target
once you find that element start two pointer.. one towards its left and second right to the middle element and keep on going until either we get out of index or element is not equal the target

Keep increasing the counter on every left or right matches with target
Note : as soon as you find the element increase counter by 1 before going left or right as you would make curr_left=mid-1 && curr_right =mid+1

**/

class Solution {
    public boolean isMajorityElement(int[] nums, int target) {
        
        int count=(nums.length/2);
        int left=0;
        int right=nums.length-1;
        int target_count=0;

        while(left < right)
        {
        	int mid =left+(right-left)/2;
        	if(nums[mid] == target)
        	{
        		target_count++;
        		int curr_left= mid-1;
        		int curr_right=mid+1;
        		
              
        			while(curr_left >= 0 && nums[curr_left] == target)
        			{
        				target_count++;
        				curr_left--;
        			}			

        			while(curr_right <nums.length && nums[curr_right] ==target)
        			{
        				target_count++;
        				curr_right++;
        			}
              	break;
        		
        	

        	}
        	else if(nums[mid]>target)
        			right=mid;
        	else 
        		left=mid+1;

        	
        }


      return target_count> count;


    }
}